////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Seg7_Dev.vf
// /___/   /\     Timestamp : 01/01/2017 12:01:35
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/CST/Desktop/HRD_10/HRD_9/HRD_8/HRD_7/HRD_4/HRD_1/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Users/CST/Desktop/HRD_10/HRD_9/HRD_8/HRD_7/HRD_4/HRD_1/Seg7_Dev.vf -w C:/Users/CST/Desktop/HRD_10/HRD_9/HRD_8/HRD_7/HRD_4/HRD_1/Seg7_Dev.sch
//Design Name: Seg7_Dev
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX2T1_8_MUSER_Seg7_Dev(I1, 
                               I2, 
                               Scan, 
                               O);

    input [7:0] I1;
    input [7:0] I2;
    input Scan;
   output [7:0] O;
   
   wire XLXN_11;
   wire XLXN_36;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   
   AND2  XLXI_1 (.I0(XLXN_11), 
                .I1(I1[1]), 
                .O(XLXN_40));
   AND2  XLXI_2 (.I0(XLXN_11), 
                .I1(I1[2]), 
                .O(XLXN_42));
   AND2  XLXI_3 (.I0(XLXN_11), 
                .I1(I1[3]), 
                .O(XLXN_44));
   AND2  XLXI_4 (.I0(XLXN_11), 
                .I1(I1[4]), 
                .O(XLXN_46));
   AND2  XLXI_5 (.I0(XLXN_11), 
                .I1(I1[5]), 
                .O(XLXN_47));
   AND2  XLXI_6 (.I0(XLXN_11), 
                .I1(I1[6]), 
                .O(XLXN_48));
   AND2  XLXI_7 (.I0(XLXN_11), 
                .I1(I1[7]), 
                .O(XLXN_49));
   AND2  XLXI_8 (.I0(XLXN_11), 
                .I1(I1[0]), 
                .O(XLXN_36));
   AND2  XLXI_9 (.I0(Scan), 
                .I1(I2[1]), 
                .O(XLXN_41));
   AND2  XLXI_10 (.I0(Scan), 
                 .I1(I2[2]), 
                 .O(XLXN_43));
   AND2  XLXI_11 (.I0(Scan), 
                 .I1(I2[3]), 
                 .O(XLXN_45));
   AND2  XLXI_12 (.I0(Scan), 
                 .I1(I2[4]), 
                 .O(XLXN_50));
   AND2  XLXI_13 (.I0(Scan), 
                 .I1(I2[5]), 
                 .O(XLXN_51));
   AND2  XLXI_14 (.I0(Scan), 
                 .I1(I2[6]), 
                 .O(XLXN_52));
   AND2  XLXI_15 (.I0(Scan), 
                 .I1(I2[7]), 
                 .O(XLXN_53));
   AND2  XLXI_16 (.I0(Scan), 
                 .I1(I2[0]), 
                 .O(XLXN_39));
   OR2  XLXI_17 (.I0(XLXN_39), 
                .I1(XLXN_36), 
                .O(O[0]));
   OR2  XLXI_18 (.I0(XLXN_41), 
                .I1(XLXN_40), 
                .O(O[1]));
   OR2  XLXI_19 (.I0(XLXN_43), 
                .I1(XLXN_42), 
                .O(O[2]));
   OR2  XLXI_20 (.I0(XLXN_45), 
                .I1(XLXN_44), 
                .O(O[3]));
   OR2  XLXI_21 (.I0(XLXN_50), 
                .I1(XLXN_46), 
                .O(O[4]));
   OR2  XLXI_22 (.I0(XLXN_51), 
                .I1(XLXN_47), 
                .O(O[5]));
   OR2  XLXI_23 (.I0(XLXN_52), 
                .I1(XLXN_48), 
                .O(O[6]));
   OR2  XLXI_24 (.I0(XLXN_53), 
                .I1(XLXN_49), 
                .O(O[7]));
   INV  XLXI_25 (.I(Scan), 
                .O(XLXN_11));
endmodule
`timescale 1ns / 1ps

module MUX4T1_MUSER_Seg7_Dev(I0, 
                             I1, 
                             I2, 
                             I3, 
                             S, 
                             O);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] S;
   output O;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_12;
   
   OR4  XLXI_1 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_3), 
               .I3(XLXN_1), 
               .O(O));
   AND2  XLXI_2 (.I0(I0), 
                .I1(XLXN_6), 
                .O(XLXN_1));
   AND2  XLXI_3 (.I0(I1), 
                .I1(XLXN_7), 
                .O(XLXN_3));
   AND2  XLXI_4 (.I0(I2), 
                .I1(XLXN_8), 
                .O(XLXN_4));
   AND2  XLXI_5 (.I0(I3), 
                .I1(XLXN_9), 
                .O(XLXN_5));
   AND2  XLXI_6 (.I0(XLXN_12), 
                .I1(XLXN_10), 
                .O(XLXN_6));
   AND2  XLXI_7 (.I0(S[0]), 
                .I1(XLXN_10), 
                .O(XLXN_7));
   AND2  XLXI_8 (.I0(S[1]), 
                .I1(XLXN_12), 
                .O(XLXN_8));
   AND2  XLXI_9 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_9));
   INV  XLXI_10 (.I(S[1]), 
                .O(XLXN_10));
   INV  XLXI_11 (.I(S[0]), 
                .O(XLXN_12));
endmodule
`timescale 1ns / 1ps

module Seg_map_MUSER_Seg7_Dev(Hexs, 
                              Scan, 
                              Seg_map);

    input [31:0] Hexs;
    input [2:0] Scan;
   output [7:0] Seg_map;
   
   
   MUX4T1_MUSER_Seg7_Dev  XLXI_7 (.I0(Hexs[0]), 
                                 .I1(Hexs[1]), 
                                 .I2(Hexs[2]), 
                                 .I3(Hexs[3]), 
                                 .S(Scan[1:0]), 
                                 .O(Seg_map[0]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_8 (.I0(Hexs[4]), 
                                 .I1(Hexs[6]), 
                                 .I2(Hexs[8]), 
                                 .I3(Hexs[10]), 
                                 .S(Scan[1:0]), 
                                 .O(Seg_map[1]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_9 (.I0(Hexs[16]), 
                                 .I1(Hexs[18]), 
                                 .I2(Hexs[20]), 
                                 .I3(Hexs[22]), 
                                 .S(Scan[1:0]), 
                                 .O(Seg_map[2]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_10 (.I0(Hexs[25]), 
                                  .I1(Hexs[27]), 
                                  .I2(Hexs[29]), 
                                  .I3(Hexs[31]), 
                                  .S(Scan[1:0]), 
                                  .O(Seg_map[3]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_11 (.I0(Hexs[17]), 
                                  .I1(Hexs[19]), 
                                  .I2(Hexs[21]), 
                                  .I3(Hexs[23]), 
                                  .S(Scan[1:0]), 
                                  .O(Seg_map[4]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_12 (.I0(Hexs[5]), 
                                  .I1(Hexs[7]), 
                                  .I2(Hexs[9]), 
                                  .I3(Hexs[11]), 
                                  .S(Scan[1:0]), 
                                  .O(Seg_map[5]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_13 (.I0(Hexs[12]), 
                                  .I1(Hexs[13]), 
                                  .I2(Hexs[14]), 
                                  .I3(Hexs[15]), 
                                  .S(Scan[1:0]), 
                                  .O(Seg_map[6]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_14 (.I0(Hexs[24]), 
                                  .I1(Hexs[26]), 
                                  .I2(Hexs[28]), 
                                  .I3(Hexs[30]), 
                                  .S(Scan[1:0]), 
                                  .O(Seg_map[7]));
endmodule
`timescale 1ns / 1ps

module MC14495_sch_MUSER_Seg7_Dev(D0, 
                                  D1, 
                                  D2, 
                                  D3, 
                                  LE, 
                                  point, 
                                  a, 
                                  b, 
                                  c, 
                                  d, 
                                  e, 
                                  f, 
                                  g, 
                                  p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_31;
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_110;
   wire XLXN_117;
   wire XLXN_119;
   wire XLXN_120;
   wire XLXN_121;
   wire XLXN_122;
   wire XLXN_133;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   wire XLXN_138;
   wire XLXN_139;
   wire XLXN_147;
   wire _D0;
   wire _D1;
   wire _D2;
   wire _D3;
   
   AND4  XLXI_6 (.I0(D0), 
                .I1(_D1), 
                .I2(_D2), 
                .I3(_D3), 
                .O(XLXN_19));
   AND4  XLXI_7 (.I0(_D0), 
                .I1(_D1), 
                .I2(D2), 
                .I3(_D3), 
                .O(XLXN_31));
   AND4  XLXI_8 (.I0(D0), 
                .I1(D1), 
                .I2(_D2), 
                .I3(D3), 
                .O(XLXN_17));
   AND4  XLXI_9 (.I0(D0), 
                .I1(_D1), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_16));
   OR4  XLXI_10 (.I0(XLXN_16), 
                .I1(XLXN_17), 
                .I2(XLXN_31), 
                .I3(XLXN_19), 
                .O(XLXN_133));
   INV  XLXI_11 (.I(D3), 
                .O(_D3));
   INV  XLXI_13 (.I(D2), 
                .O(_D2));
   INV  XLXI_14 (.I(D1), 
                .O(_D1));
   INV  XLXI_15 (.I(D0), 
                .O(_D0));
   AND4  XLXI_16 (.I0(D0), 
                 .I1(_D1), 
                 .I2(D2), 
                 .I3(_D3), 
                 .O(XLXN_23));
   AND3  XLXI_17 (.I0(_D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_22));
   AND3  XLXI_18 (.I0(_D0), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_21));
   AND3  XLXI_19 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_20));
   OR4  XLXI_20 (.I0(XLXN_20), 
                .I1(XLXN_21), 
                .I2(XLXN_22), 
                .I3(XLXN_23), 
                .O(XLXN_134));
   AND4  XLXI_21 (.I0(_D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(_D3), 
                 .O(XLXN_27));
   AND3  XLXI_22 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_24));
   OR3  XLXI_23 (.I0(XLXN_24), 
                .I1(XLXN_21), 
                .I2(XLXN_27), 
                .O(XLXN_135));
   AND3  XLXI_24 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_29));
   AND4  XLXI_25 (.I0(_D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(D3), 
                 .O(XLXN_28));
   OR4  XLXI_26 (.I0(XLXN_28), 
                .I1(XLXN_29), 
                .I2(XLXN_31), 
                .I3(XLXN_19), 
                .O(XLXN_136));
   AND3  XLXI_87 (.I0(D0), 
                 .I1(_D1), 
                 .I2(_D2), 
                 .O(XLXN_110));
   AND3  XLXI_88 (.I0(_D1), 
                 .I1(D2), 
                 .I2(_D3), 
                 .O(XLXN_108));
   AND2  XLXI_89 (.I0(D0), 
                 .I1(_D3), 
                 .O(XLXN_107));
   OR3  XLXI_90 (.I0(XLXN_110), 
                .I1(XLXN_108), 
                .I2(XLXN_107), 
                .O(XLXN_137));
   OR4  XLXI_91 (.I0(XLXN_16), 
                .I1(XLXN_117), 
                .I2(XLXN_119), 
                .I3(XLXN_120), 
                .O(XLXN_138));
   AND3  XLXI_92 (.I0(D0), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_120));
   AND3  XLXI_93 (.I0(D1), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_119));
   AND3  XLXI_94 (.I0(D0), 
                 .I1(D1), 
                 .I2(_D3), 
                 .O(XLXN_117));
   OR3  XLXI_95 (.I0(XLXN_147), 
                .I1(XLXN_122), 
                .I2(XLXN_121), 
                .O(XLXN_139));
   AND3  XLXI_96 (.I0(_D1), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_121));
   AND4  XLXI_97 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .I3(_D3), 
                 .O(XLXN_122));
   OR2  XLXI_99 (.I0(LE), 
                .I1(XLXN_139), 
                .O(g));
   OR2  XLXI_100 (.I0(LE), 
                 .I1(XLXN_138), 
                 .O(f));
   OR2  XLXI_101 (.I0(LE), 
                 .I1(XLXN_137), 
                 .O(e));
   OR2  XLXI_102 (.I0(LE), 
                 .I1(XLXN_136), 
                 .O(d));
   OR2  XLXI_103 (.I0(LE), 
                 .I1(XLXN_135), 
                 .O(c));
   OR2  XLXI_104 (.I0(LE), 
                 .I1(XLXN_134), 
                 .O(b));
   OR2  XLXI_105 (.I0(LE), 
                 .I1(XLXN_133), 
                 .O(a));
   INV  XLXI_106 (.I(point), 
                 .O(p));
   AND4  XLXI_107 (.I0(_D0), 
                  .I1(_D1), 
                  .I2(D2), 
                  .I3(D3), 
                  .O(XLXN_147));
endmodule
`timescale 1ns / 1ps

module MUX441_MUSER_Seg7_Dev(I0, 
                             I1, 
                             I2, 
                             I3, 
                             S, 
                             O);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] S;
   output [3:0] O;
   
   
   MUX4T1_MUSER_Seg7_Dev  XLXI_79 (.I0(I0[0]), 
                                  .I1(I1[0]), 
                                  .I2(I2[0]), 
                                  .I3(I3[0]), 
                                  .S(S[1:0]), 
                                  .O(O[0]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_80 (.I0(I0[1]), 
                                  .I1(I1[1]), 
                                  .I2(I2[1]), 
                                  .I3(I3[1]), 
                                  .S(S[1:0]), 
                                  .O(O[1]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_82 (.I0(I0[2]), 
                                  .I1(I1[2]), 
                                  .I2(I2[2]), 
                                  .I3(I3[2]), 
                                  .S(S[1:0]), 
                                  .O(O[2]));
   MUX4T1_MUSER_Seg7_Dev  XLXI_83 (.I0(I0[3]), 
                                  .I1(I1[3]), 
                                  .I2(I2[3]), 
                                  .I3(I3[3]), 
                                  .S(S[1:0]), 
                                  .O(O[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_Seg7_Dev(I0, 
                               I1, 
                               I2, 
                               I3, 
                               I4, 
                               I5, 
                               I6, 
                               I7, 
                               S, 
                               O);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] S;
   output [7:0] O;
   
   wire [3:0] O0;
   wire [7:4] O1;
   wire [3:0] O2;
   wire [7:4] O3;
   wire XLXN_30;
   wire XLXN_107;
   wire XLXN_108;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_112;
   wire XLXN_113;
   wire XLXN_115;
   wire XLXN_116;
   wire XLXN_117;
   wire XLXN_118;
   wire XLXN_119;
   wire XLXN_120;
   wire XLXN_121;
   wire XLXN_122;
   wire XLXN_124;
   
   AND2  XLXI_1 (.I0(XLXN_30), 
                .I1(O0[0]), 
                .O(XLXN_107));
   AND2  XLXI_2 (.I0(XLXN_30), 
                .I1(O0[1]), 
                .O(XLXN_108));
   AND2  XLXI_3 (.I0(XLXN_30), 
                .I1(O0[2]), 
                .O(XLXN_109));
   AND2  XLXI_4 (.I0(XLXN_30), 
                .I1(O0[3]), 
                .O(XLXN_110));
   AND2  XLXI_5 (.I0(XLXN_30), 
                .I1(O1[4]), 
                .O(XLXN_111));
   AND2  XLXI_6 (.I0(XLXN_30), 
                .I1(O1[5]), 
                .O(XLXN_112));
   AND2  XLXI_7 (.I0(XLXN_30), 
                .I1(O1[6]), 
                .O(XLXN_113));
   AND2  XLXI_8 (.I0(XLXN_30), 
                .I1(O1[7]), 
                .O(XLXN_115));
   AND2  XLXI_9 (.I0(S[2]), 
                .I1(O2[0]), 
                .O(XLXN_116));
   AND2  XLXI_10 (.I0(S[2]), 
                 .I1(O2[1]), 
                 .O(XLXN_117));
   AND2  XLXI_11 (.I0(S[2]), 
                 .I1(O2[2]), 
                 .O(XLXN_118));
   AND2  XLXI_12 (.I0(S[2]), 
                 .I1(O2[3]), 
                 .O(XLXN_119));
   AND2  XLXI_13 (.I0(S[2]), 
                 .I1(O3[4]), 
                 .O(XLXN_120));
   AND2  XLXI_14 (.I0(S[2]), 
                 .I1(O3[5]), 
                 .O(XLXN_121));
   AND2  XLXI_15 (.I0(S[2]), 
                 .I1(O3[6]), 
                 .O(XLXN_122));
   AND2  XLXI_16 (.I0(S[2]), 
                 .I1(O3[7]), 
                 .O(XLXN_124));
   INV  XLXI_17 (.I(S[2]), 
                .O(XLXN_30));
   OR2  XLXI_18 (.I0(XLXN_116), 
                .I1(XLXN_107), 
                .O(O[0]));
   OR2  XLXI_19 (.I0(XLXN_117), 
                .I1(XLXN_108), 
                .O(O[1]));
   OR2  XLXI_20 (.I0(XLXN_118), 
                .I1(XLXN_109), 
                .O(O[2]));
   OR2  XLXI_21 (.I0(XLXN_119), 
                .I1(XLXN_110), 
                .O(O[3]));
   OR2  XLXI_22 (.I0(XLXN_120), 
                .I1(XLXN_111), 
                .O(O[4]));
   OR2  XLXI_23 (.I0(XLXN_121), 
                .I1(XLXN_112), 
                .O(O[5]));
   OR2  XLXI_30 (.I0(XLXN_122), 
                .I1(XLXN_113), 
                .O(O[6]));
   OR2  XLXI_31 (.I0(XLXN_124), 
                .I1(XLXN_115), 
                .O(O[7]));
   MUX441_MUSER_Seg7_Dev  XLXI_32 (.I0(I0[3:0]), 
                                  .I1(I1[3:0]), 
                                  .I2(I2[3:0]), 
                                  .I3(I3[3:0]), 
                                  .S(S[1:0]), 
                                  .O(O0[3:0]));
   MUX441_MUSER_Seg7_Dev  XLXI_33 (.I0(I0[7:4]), 
                                  .I1(I1[7:4]), 
                                  .I2(I2[7:4]), 
                                  .I3(I3[7:4]), 
                                  .S(S[1:0]), 
                                  .O(O1[7:4]));
   MUX441_MUSER_Seg7_Dev  XLXI_34 (.I0(I4[3:0]), 
                                  .I1(I5[3:0]), 
                                  .I2(I6[3:0]), 
                                  .I3(I7[3:0]), 
                                  .S(S[1:0]), 
                                  .O(O2[3:0]));
   MUX441_MUSER_Seg7_Dev  XLXI_35 (.I0(I4[7:4]), 
                                  .I1(I5[7:4]), 
                                  .I2(I6[7:4]), 
                                  .I3(I7[7:4]), 
                                  .S(S[1:0]), 
                                  .O(O3[7:4]));
endmodule
`timescale 1ns / 1ps

module ScanSync_MUSER_Seg7_Dev(Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               AN, 
                               Hexo, 
                               LE, 
                               p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   MUX8T1_8_MUSER_Seg7_Dev  XLXI_1 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                   .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                   .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                   .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                   .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                   .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                   .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                   .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                   .S(Scan[2:0]), 
                                   .O(Hex[7:0]));
   MUX8T1_8_MUSER_Seg7_Dev  XLXI_2 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, 
         G0}), 
                                   .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                   .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                   .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                   .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                   .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                   .I6({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                   .I7({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                   .S(Scan[2:0]), 
                                   .O(COM[7:0]));
   VCC  XLXI_3 (.P(V5));
   GND  XLXI_4 (.G(G0));
   BUF  XLXI_5 (.I(Hex[7]), 
               .O(Hexo[3]));
   BUF  XLXI_6 (.I(Hex[6]), 
               .O(Hexo[2]));
   BUF  XLXI_7 (.I(Hex[5]), 
               .O(Hexo[1]));
   BUF  XLXI_8 (.I(Hex[4]), 
               .O(Hexo[0]));
   BUF  XLXI_9 (.I(COM[3]), 
               .O(AN[3]));
   BUF  XLXI_10 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_11 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_12 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_13 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_14 (.I(COM[6]), 
                .O(p));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev(flash, 
                Hexs, 
                LES, 
                point, 
                Scan, 
                SW0, 
                AN, 
                SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [3:0] Hex;
   wire [7:0] SEG_TXT;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_7;
   wire [7:0] XLXN_29;
   
   ScanSync_MUSER_Seg7_Dev  XLXI_1 (.Hexs(Hexs[31:0]), 
                                   .LES(LES[7:0]), 
                                   .point(point[7:0]), 
                                   .Scan(Scan[2:0]), 
                                   .AN(AN[3:0]), 
                                   .Hexo(Hex[3:0]), 
                                   .LE(XLXN_4), 
                                   .p(XLXN_7));
   MC14495_sch_MUSER_Seg7_Dev  XLXI_2 (.D0(Hex[0]), 
                                      .D1(Hex[1]), 
                                      .D2(Hex[2]), 
                                      .D3(Hex[3]), 
                                      .LE(XLXN_3), 
                                      .point(XLXN_7), 
                                      .a(SEG_TXT[0]), 
                                      .b(SEG_TXT[1]), 
                                      .c(SEG_TXT[2]), 
                                      .d(SEG_TXT[3]), 
                                      .e(SEG_TXT[4]), 
                                      .f(SEG_TXT[5]), 
                                      .g(SEG_TXT[6]), 
                                      .p(SEG_TXT[7]));
   AND2  XLXI_3 (.I0(XLXN_4), 
                .I1(flash), 
                .O(XLXN_3));
   Seg_map_MUSER_Seg7_Dev  XLXI_4 (.Hexs(Hexs[31:0]), 
                                  .Scan(Scan[2:0]), 
                                  .Seg_map(XLXN_29[7:0]));
   MUX2T1_8_MUSER_Seg7_Dev  XLXI_5 (.I1(XLXN_29[7:0]), 
                                   .I2(SEG_TXT[7:0]), 
                                   .Scan(SW0), 
                                   .O(SEGMENT[7:0]));
endmodule
